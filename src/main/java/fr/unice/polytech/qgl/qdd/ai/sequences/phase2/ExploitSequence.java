package fr.unice.polytech.qgl.qdd.ai.sequences.phase2;

import fr.unice.polytech.qgl.qdd.Action;
import fr.unice.polytech.qgl.qdd.ai.CheckList;
import fr.unice.polytech.qgl.qdd.ai.sequences.Sequence;
import fr.unice.polytech.qgl.qdd.enums.ResourceEnum;
import fr.unice.polytech.qgl.qdd.navigation.Navigator;

import java.util.ArrayList;
import java.util.List;
import java.util.Set;

/**
 * Created by Hakim on 12/13/2015.
 */
public class ExploitSequence extends Sequence {
    private Set<ResourceEnum> contractedResources;

    public ExploitSequence(Navigator nav, CheckList checkList, Set<ResourceEnum> contractedResources) {
        super(nav, checkList);
        this.contractedResources = contractedResources;
    }

    @Override
    public Action execute() { return exploit(selectResourcesToExploit()); }

    @Override
    public boolean completed() {
        return !checkList.exploitableResourceFound();
    }

    private List<ResourceEnum> selectResourcesToExploit() {
        List<ResourceEnum> availableResources = new ArrayList<>();
        for(ResourceEnum r : nav.getCurrentTile().getResources().keySet()) {
            if (contractedResources.contains(r)){
                availableResources.add(r);
            }
        }

        return availableResources;
    }
}
